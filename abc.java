package pso_skripsi;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Zilfikri Y.R TIF 125150200xxx
 */
import static java.lang.Math.abs;
import static java.lang.Math.abs;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;

public class GUI_PSO extends javax.swing.JFrame {

    /**
     * Creates new form GUI_PSO
     */
    Connection connection;
    
    public int umur, populasi, iterasi;
    double beratBadan,c1,c2,faktorAkt,ra1,ra2;
    public double kebutuhanKalo,kebutuhanKarb,kebutuhanProt,kebutuhanLema;
    double indexT;
          
    String gender;
    double[][] partikel;
    double pBest;
    double gBest;
    
    public double getIndexT(){
        return indexT;
    }
    public void setIndexT(double indexT){
        this.indexT=indexT;
    }
    
     private static final String USERNAME= "root";
     private static final String PASSWORD= "";
     private static final String CONN_STRING="jdbc:mysql://localhost/makanan";
     public static Connection koneksii;
      public static Connection koneksi(){
      
          
           if(koneksii == null){
            
            try{
                String url = "jdbc:mysql://localhost/makanan";
                String user = "root";
                String pass = "";
                
                DriverManager.registerDriver(new com.mysql.jdbc.Driver());
                koneksii = DriverManager.getConnection(url, user, pass);
                
            }catch (SQLException e){
                System.out.println();
            }
        }
        return koneksii;
    }
    
    public GUI_PSO() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        grup_umur = new javax.swing.ButtonGroup();
        jLabel3 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        boxGender = new javax.swing.JComboBox();
        textfieldBB = new javax.swing.JTextField();
        kategori1 = new javax.swing.JRadioButton();
        kategori2 = new javax.swing.JRadioButton();
        kategori3 = new javax.swing.JRadioButton();
        boxLevel = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        tfPopulasi = new javax.swing.JTextField();
        tfIterasi = new javax.swing.JTextField();
        tfC1 = new javax.swing.JTextField();
        tfC2 = new javax.swing.JTextField();
        kalkulasi = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabMK = new javax.swing.JTable();
        tombolTPokok = new javax.swing.JButton();
        tombolTNabati = new javax.swing.JButton();
        tombolTHewani = new javax.swing.JButton();
        tombolTSayuran = new javax.swing.JButton();
        tombolTPelengkap = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        taHasilIterasi = new javax.swing.JTextArea();
        jPanel4 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        tfOutputKalori = new javax.swing.JTextField();
        tfOutputKarbohidrat = new javax.swing.JTextField();
        tfOutputProtein = new javax.swing.JTextField();
        tfOutputLemak = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        taDetail = new javax.swing.JTextArea();
        tfKalRekom = new javax.swing.JTextField();
        tfKarRekom = new javax.swing.JTextField();
        tfProRekom = new javax.swing.JTextField();
        tfLemRekom = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        tfSelPerKal = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        tfSelPerKar = new javax.swing.JTextField();
        tfSelPerPro = new javax.swing.JTextField();
        tfSelPerLem = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel3.setText("Rekomendasi Menu Makanan untuk Atlet Endurance");

        jLabel1.setText("DATA ATLET");

        jLabel2.setText("GENDER");

        jLabel4.setText("BERAT BADAN");

        jLabel5.setText("USIA");

        jLabel6.setText("LEVEL ATLET");

        boxGender.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Laki-Laki", "Perempuan" }));
        boxGender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxGenderActionPerformed(evt);
            }
        });

        textfieldBB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textfieldBBActionPerformed(evt);
            }
        });

        grup_umur.add(kategori1);
        kategori1.setText("10 - 18 Tahun");
        kategori1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kategori1ActionPerformed(evt);
            }
        });

        grup_umur.add(kategori2);
        kategori2.setText("18 - 30 Tahun");

        grup_umur.add(kategori3);
        kategori3.setText("30 - 60 Tahun");

        boxLevel.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Pemula", "Amatir", "Profesional" }));

        jLabel7.setText("PARAMETER");

        jLabel8.setText("Populasi");

        jLabel9.setText("Iterasi");

        jLabel10.setText("C1");

        jLabel11.setText("C2");

        tfPopulasi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfPopulasiActionPerformed(evt);
            }
        });

        tfIterasi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfIterasiActionPerformed(evt);
            }
        });

        tfC2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfC2ActionPerformed(evt);
            }
        });

        kalkulasi.setText("Kalkulasi");
        kalkulasi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kalkulasiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(kategori2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(kategori3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(kategori1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(textfieldBB)
                                    .addComponent(boxGender, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)
                                .addComponent(boxLevel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(121, 121, 121)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel11))
                                .addGap(18, 18, 18))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfC2)
                            .addComponent(tfPopulasi, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
                            .addComponent(tfC1)
                            .addComponent(tfIterasi, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(32, 32, 32))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel7)
                        .addGap(63, 63, 63))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(175, 175, 175)
                .addComponent(kalkulasi)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfPopulasi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfIterasi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfC1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfC2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(boxGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(textfieldBB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(kategori1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(kategori2)
                        .addGap(7, 7, 7)
                        .addComponent(kategori3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(boxLevel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))))
                .addGap(17, 17, 17)
                .addComponent(kalkulasi)
                .addContainerGap(470, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Input ", jPanel1);

        tabMK.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "No.", "Nama Makanan", "Kalori", "Karbohidrat", "Protein", "Lemak", "Harga"
            }
        ));
        jScrollPane1.setViewportView(tabMK);

        tombolTPokok.setText("Makanan Pokok");
        tombolTPokok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tombolTPokokActionPerformed(evt);
            }
        });

        tombolTNabati.setText("Nabati");
        tombolTNabati.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tombolTNabatiActionPerformed(evt);
            }
        });

        tombolTHewani.setText("Hewani");
        tombolTHewani.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tombolTHewaniActionPerformed(evt);
            }
        });

        tombolTSayuran.setText("Sayuran");
        tombolTSayuran.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tombolTSayuranActionPerformed(evt);
            }
        });

        tombolTPelengkap.setText("Pelengkap");
        tombolTPelengkap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tombolTPelengkapActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(tombolTPokok)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tombolTNabati)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tombolTHewani)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tombolTSayuran)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tombolTPelengkap)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tombolTPokok)
                    .addComponent(tombolTNabati)
                    .addComponent(tombolTHewani)
                    .addComponent(tombolTSayuran)
                    .addComponent(tombolTPelengkap))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 491, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(168, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("List Makanan", jPanel2);

        jLabel17.setText("Gbest Terbaik Tiap Iterasi");

        taHasilIterasi.setColumns(20);
        taHasilIterasi.setRows(5);
        jScrollPane2.setViewportView(taHasilIterasi);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(204, Short.MAX_VALUE)
                .addComponent(jLabel17)
                .addGap(193, 193, 193))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(339, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Gbest tiap Iterasi", jPanel3);

        jLabel18.setText("Kebutuhan Gizi Atlet");

        jLabel19.setText("Kalori");

        jLabel20.setText("Karbohidrat");

        jLabel21.setText("Protein");

        jLabel22.setText("Lemak");

        tfOutputKalori.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfOutputKaloriActionPerformed(evt);
            }
        });

        tfOutputProtein.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfOutputProteinActionPerformed(evt);
            }
        });

        tfOutputLemak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfOutputLemakActionPerformed(evt);
            }
        });

        jLabel23.setText("Kal");

        jLabel24.setText("gram");

        jLabel25.setText("gram");

        jLabel26.setText("gram");

        jLabel27.setText("Detail Rekomendasi Menu Makanan");

        taDetail.setColumns(20);
        taDetail.setRows(5);
        jScrollPane3.setViewportView(taDetail);

        tfProRekom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfProRekomActionPerformed(evt);
            }
        });

        jLabel29.setText("gram");

        jLabel30.setText("gram");

        jLabel31.setText("gram");

        jLabel32.setText("Kal");

        jLabel33.setText("Gizi Hasil Rekomendasi & Persentase Selisih");

        jLabel12.setText("%");

        jLabel13.setText("%");

        jLabel14.setText("%");

        jLabel15.setText("%");

        tfSelPerKar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfSelPerKarActionPerformed(evt);
            }
        });

        tfSelPerPro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfSelPerProActionPerformed(evt);
            }
        });

        tfSelPerLem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfSelPerLemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel20)
                                    .addComponent(jLabel21)
                                    .addComponent(jLabel22)
                                    .addComponent(jLabel19))
                                .addGap(16, 16, 16)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(tfOutputLemak, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                                    .addComponent(tfOutputProtein, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tfOutputKalori, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tfOutputKarbohidrat, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGap(10, 10, 10)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel25)
                                    .addComponent(jLabel26)
                                    .addComponent(jLabel24)
                                    .addComponent(jLabel23)))
                            .addComponent(jLabel18))
                        .addGap(60, 60, 60)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel33)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(tfKalRekom, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(tfKarRekom, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(jPanel4Layout.createSequentialGroup()
                                                .addComponent(jLabel29)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(tfSelPerKar, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel4Layout.createSequentialGroup()
                                                .addComponent(jLabel32)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(tfSelPerKal, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel4Layout.createSequentialGroup()
                                                .addComponent(tfProRekom, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel30))
                                            .addGroup(jPanel4Layout.createSequentialGroup()
                                                .addComponent(tfLemRekom, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel31)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(tfSelPerPro, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(tfSelPerLem, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel14)
                                    .addComponent(jLabel15))))
                        .addGap(32, 32, 32))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 412, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(56, 56, 56))))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(165, 165, 165)
                .addComponent(jLabel27)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(jLabel33))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfOutputKalori, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfKalRekom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel32)
                    .addComponent(jLabel19)
                    .addComponent(jLabel23)
                    .addComponent(jLabel12)
                    .addComponent(tfSelPerKal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfOutputKarbohidrat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfKarRekom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel29)
                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24)
                    .addComponent(jLabel13)
                    .addComponent(tfSelPerKar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfOutputProtein, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfProRekom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel30)
                    .addComponent(jLabel21)
                    .addComponent(jLabel25)
                    .addComponent(jLabel14)
                    .addComponent(tfSelPerPro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfOutputLemak, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfLemRekom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel31)
                    .addComponent(jLabel22)
                    .addComponent(jLabel26)
                    .addComponent(jLabel15)
                    .addComponent(tfSelPerLem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addComponent(jLabel27)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(223, 223, 223))
        );

        jTabbedPane1.addTab("Hasil", jPanel4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(137, 137, 137))
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jLabel3)
                .addGap(17, 17, 17)
                .addComponent(jTabbedPane1))
        );

        pack();
    }// </editor-fold>                        

    private void boxGenderActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
    }                                         

    private void kategori1ActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
    }                                         

    private void tfPopulasiActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
    }                                          

    private void tfIterasiActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
    }                                         
public void AtletLaki(int kategori){
//dari UI 
//beratBadan = Double.parseDouble(textfieldBB.getText());
 beratBadan=55;
if(kategori == 1){
    kebutuhanKalo = ((17.5 * beratBadan) + 651) * getFaktorAktivitas();
    kebutuhanKarb = (kebutuhanKalo * 0.65) / 4;
    kebutuhanProt = (kebutuhanKalo * 0.15) / 4;
    kebutuhanLema = (kebutuhanKalo * 0.2) / 9;
}else if(kategori == 2){
    kebutuhanKalo = ((15.3 * beratBadan) + 679) * getFaktorAktivitas();
    kebutuhanKarb = (kebutuhanKalo * 0.65) / 4;
    kebutuhanProt = (kebutuhanKalo * 0.15) / 4;
    kebutuhanLema = (kebutuhanKalo * 0.2) / 9;
}else if (kategori == 3){
    kebutuhanKalo = ((11.6 * beratBadan) + 879) * getFaktorAktivitas();
    kebutuhanKarb = (kebutuhanKalo * 0.65) / 4;
    kebutuhanProt = (kebutuhanKalo * 0.15) / 4;
    kebutuhanLema = (kebutuhanKalo * 0.2) / 9;
    }

tfOutputKalori.setText(String.valueOf(kebutuhanKalo));  
tfOutputKarbohidrat.setText(String.valueOf(kebutuhanKarb));
tfOutputProtein.setText(String.valueOf(kebutuhanProt));
tfOutputLemak.setText(String.valueOf(kebutuhanLema));
        
 }
 
 public void AtletPerempuan(int kategori){
    
    beratBadan = Double.parseDouble(textfieldBB.getText());
 
if(kategori == 1){
    kebutuhanKalo = ((12.2 * beratBadan) + 749) * getFaktorAktivitas();
    kebutuhanKarb = (kebutuhanKalo * 0.65) / 4;
    kebutuhanProt = (kebutuhanKalo * 0.15) / 4;
    kebutuhanLema = (kebutuhanKalo * 0.2) / 9;
    
}else if(kategori == 2){
    kebutuhanKalo = ((14.7 * beratBadan) + 496) * getFaktorAktivitas();
    kebutuhanKarb = (kebutuhanKalo * 0.65) / 4;
    kebutuhanProt = (kebutuhanKalo * 0.15) / 4;
    kebutuhanLema = (kebutuhanKalo * 0.2) / 9;
}else if (kategori == 3){
    kebutuhanKalo = ((8.7 * beratBadan) + 829) * getFaktorAktivitas();
    kebutuhanKarb = (kebutuhanKalo * 0.65) / 4;
    kebutuhanProt = (kebutuhanKalo * 0.15) / 4;
    kebutuhanLema = (kebutuhanKalo * 0.2) / 9;
    
}

tfOutputKalori.setText(String.valueOf(kebutuhanKalo));  
tfOutputKarbohidrat.setText(String.valueOf(kebutuhanKarb));
tfOutputProtein.setText(String.valueOf(kebutuhanProt));
tfOutputLemak.setText(String.valueOf(kebutuhanLema));
        
 }
 double getFaktorAktivitas(){
    String Level = String.valueOf(boxLevel.getSelectedItem());
    if( Level == "Pemula") {
        faktorAkt = 1.6;
    } else if(Level == "Amatir"){
        faktorAkt = 2.0;
    }else if(Level == "Profesional"){
        faktorAkt = 2.4;         
    }
        return faktorAkt;       
    }

 int priorkalori, priorkarbo, priorprotein, priorlemak;
String tabel = null, indeks = null; 
String pisah[];
double selisih_kalori, selisih_karbo, selisih_protein, selisih_lemak;
double total_kalori = 0, total_karbo = 0, total_protein = 0, total_lemak = 0, total_harga = 0;
double fitness = 0, penalti = 0;
String data[][];
String d[];
int cv=0;
Statement s1,s2,s3,s4,s5;
ResultSet r;
Object [] bahan_makanan;
Connection c= (Connection) koneksi();
 //indeksm itu isi dari partikel, nomorta itu urutan keberapa dari isi partikel |||| indeksm = indeks_makanan
//p[populasi][nomorta]=indeksm;
double ambilKalo(int indeksm, int nomorta){
double kal = 1000;
String namaTabel="makanan_pokok" ;
if (nomorta == 0 || nomorta == 5 || nomorta == 10) {
    namaTabel= "makanan_pokok";
}if (nomorta == 1 || nomorta == 6 || nomorta == 11) {
    namaTabel= "sumber_nabati";
}if (nomorta == 2 || nomorta == 7 || nomorta == 12) {
    namaTabel= "sayuran";
}if (nomorta == 3 || nomorta == 8 ) {
    namaTabel= "sumber_hewani";
}if (nomorta == 4 || nomorta == 9 || nomorta == 13) {
    namaTabel= "pelengkap";
}
   

    try {
//        cv=cv+1;
//        System.out.println(cv+ " = "+ indeksm);
    String queKal="select energi from "+ namaTabel +" where indeks_makanan = "+indeksm;
    s1=c.createStatement();
    r=s1.executeQuery(queKal);
        while  (r.next()){
            kal=Double.valueOf(r.getDouble(1));
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "error kal "+e);
    }

return kal;
}
double ambilKarb(int indeksm, int nomorta){
double kar = 1000;
//nomorta dari indeksnya partike 0-14
String namaTabel="makanan_pokok";
if (nomorta == 0 || nomorta == 5 || nomorta == 10) {
    namaTabel= "makanan_pokok";
}if (nomorta == 1 || nomorta == 6 || nomorta == 11) {
    namaTabel= "sumber_nabati";
}if (nomorta == 2 || nomorta == 7 || nomorta == 12) {
    namaTabel= "sayuran";
}if (nomorta == 3 || nomorta == 8 ) {
    namaTabel= "sumber_hewani";
}if (nomorta == 4 || nomorta == 9 || nomorta == 13) {
    namaTabel= "pelengkap";
}
    try {
        
String queKar="select karbohidrat from "+ namaTabel +" where indeks_makanan = "+indeksm;
s2=c.createStatement();
r=s2.executeQuery(queKar);while  (r.next()){
    kar=Double.valueOf(r.getDouble(1));
}

    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "error kar "+e);
    }
return kar;
}
double ambilProt(int indeksm, int nomorta){
double pro = 1000;
//nomorta dari indeksnya partike 0-14
String namaTabel="makanan_pokok";
if (nomorta == 0 || nomorta == 5 || nomorta == 10) {
    namaTabel= "makanan_pokok";
}if (nomorta == 1 || nomorta == 6 || nomorta == 11) {
    namaTabel= "sumber_nabati";
}if (nomorta == 2 || nomorta == 7 || nomorta == 12) {
    namaTabel= "sayuran";
}if (nomorta == 3 || nomorta == 8 ) {
    namaTabel= "sumber_hewani";
}if (nomorta == 4 || nomorta == 9 || nomorta == 13) {
    namaTabel= "pelengkap";
}
    try {
        
     String quePro="select protein from "+ namaTabel +" where indeks_makanan = "+indeksm;
s3=c.createStatement();
r=s3.executeQuery(quePro);while  (r.next()){
  pro=Double.valueOf(r.getDouble(1));
}
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "error kar "+e);
    }
return pro;
}
double ambilLema(int indeksm, int nomorta){
double lem = 1000;
//nomorta dari indeksnya partike 0-14
String namaTabel="makanan_pokok";
if (nomorta == 0 || nomorta == 5 || nomorta == 10) {
    namaTabel= "makanan_pokok";
}if (nomorta == 1 || nomorta == 6 || nomorta == 11) {
    namaTabel= "sumber_nabati";
}if (nomorta == 2 || nomorta == 7 || nomorta == 12) {
    namaTabel= "sayuran";
}if (nomorta == 3 || nomorta == 8 ) {
    namaTabel= "sumber_hewani";
}if (nomorta == 4 || nomorta == 9 || nomorta == 13) {
    namaTabel= "pelengkap";
}
    try {
        
     String queLem="select lemak from "+ namaTabel +" where indeks_makanan = "+indeksm;
s4=c.createStatement();
r=s4.executeQuery(queLem);while  (r.next()){
    lem=Double.valueOf(r.getDouble(1));
}
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "error  lem "+e);
    }
return lem;
}
double ambilHarg(int indeksm, int nomorta){
double har = 1000;
//nomorta dari indeksnya partike 0-14
String namaTabel="makanan_pokok";
if (nomorta == 0 || nomorta == 5 || nomorta == 10) {
    namaTabel= "makanan_pokok";
}if (nomorta == 1 || nomorta == 6 || nomorta == 11) {
    namaTabel= "sumber_nabati";
}if (nomorta == 2 || nomorta == 7 || nomorta == 12) {
    namaTabel= "sayuran";
}if (nomorta == 3 || nomorta == 8 ) {
    namaTabel= "sumber_hewani";
}if (nomorta == 4 || nomorta == 9 || nomorta == 13) {
    namaTabel= "pelengkap";
}
    try {
        
String queHar="select harga from "+ namaTabel +" where indeks_makanan = "+indeksm;
s5=c.createStatement();
r=s5.executeQuery(queHar);
while  (r.next()){
    har=Double.valueOf(r.getDouble(1));
}
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "error har "+e);
    }
    
return har;
}

String ambilNama(int indeksm, int nomorta){
String namaFood="";
//nomorta dari indeksnya partike 0-14
String namaTabel="makanan_pokok";
if (nomorta == 0 || nomorta == 5 || nomorta == 10) {
    namaTabel= "makanan_pokok";
}if (nomorta == 1 || nomorta == 6 || nomorta == 11) {
    namaTabel= "sumber_nabati";
}if (nomorta == 2 || nomorta == 7 || nomorta == 12) {
    namaTabel= "sayuran";
}if (nomorta == 3 || nomorta == 8 ) {
    namaTabel= "sumber_hewani";
}if (nomorta == 4 || nomorta == 9 || nomorta == 13) {
    namaTabel= "pelengkap";
}
    try {
        
String queHar="select nama_makanan from "+ namaTabel +" where indeks_makanan = "+indeksm;
s5=c.createStatement();
r=s5.executeQuery(queHar);
while  (r.next()){
    namaFood=String.valueOf(r.getString(1));
}
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "error nam "+e);
    }
    
return namaFood;
}

/*  DefaultTableModel model;
   //deklarasi nilai dari UI
        model=(DefaultTableModel) tabelGBest.getModel();
        model.insertRow(model.getRowCount(), new Object[]{textfieldBB.getText()});
  */
    private void kalkulasiActionPerformed(java.awt.event.ActionEvent evt) {                                          
             
        taHasilIterasi.setEditable(false);
        taDetail.setEditable(false);
       populasi = Integer.parseInt(tfPopulasi.getText());
     //    populasi=200;
        int panjangPartikel=14;
      iterasi = Integer.parseInt(tfIterasi.getText());

        //iterasi=80;
        //iterasi
        iterasi=iterasi+1;
        c1 = Double.parseDouble(tfC1.getText());
        c2 = Double.parseDouble(tfC2.getText());
     //  c1=1.5; c2=1.5;
        double []arrPartPBest=new double[panjangPartikel];
        double []arrPartGBest=new double[panjangPartikel];
         double []totalIsi=new double[5];
         double selisihKal, selisihKar, selisihPro, selisihLem, penaltiP, fitnessP;
        
        gBest=0;
            
        
                double [][]velocityT1= new double[populasi][panjangPartikel];
                 double [][]velocityT= new double[populasi][panjangPartikel];
                 for (int i = 0; i < populasi; i++) {
                     for (int j = 0; j < panjangPartikel; j++) {
                         velocityT1[i][j]=0;
                         velocityT[i][j]=0;
                     }
        }
                 double [][]positionT1= new double[populasi][panjangPartikel];
                 double [][]positionT= new double[populasi][panjangPartikel];
                 
        
 
        koneksi();
        gender = String.valueOf(boxGender.getSelectedItem());
        if(gender == "Laki-Laki"){
            if(kategori1.isSelected()){
                int kategori = 1;
                AtletLaki(kategori);
            } if(kategori2.isSelected()){
                int kategori = 2;
                AtletLaki(kategori);
            } if(kategori3.isSelected()){
                int kategori = 3;
                AtletLaki(kategori);
            }
        }
        if(gender == "Perempuan"){
            if(kategori1.isSelected()){
                int kategori = 1;
                AtletPerempuan(kategori);
            } if(kategori2.isSelected()){
                int kategori = 2;
                AtletPerempuan(kategori);
            } if(kategori3.isSelected()){
                int kategori = 3;
                AtletPerempuan(kategori);
            }
        }
       

            
         
        //inisialisasi populasi awal
         partikel= new double[populasi][14];
        for (int ipop = 0; ipop < populasi; ipop++) {
         for (int iisi = 0; iisi < panjangPartikel; iisi++) {
//             24 itu batas angka maks indeks setiap table
             partikel[ipop][iisi]=(int) (Math.random() *24);   
           
         }
        }for (int i = 0; i < populasi; i++) {
            for (int j = 0; j < panjangPartikel; j++) {
                velocityT[i][j]=velocityT1[i][j];
                System.out.print(partikel[i][j]+"||");
            }System.out.println("");
               
    }       

      
//for (int pengujian = 0; pengujian < 5; pengujian++) { gBest=0;

       
       
for (int iter = 0; iter < iterasi; iter++) {
        //set pBest jadi 0, karena pBest tiap iterasi selalu berbeda-beda
        pBest=0;
        //ambil isi berdasarkan indeks dan hitung fitness tiap partikel
        for (int ipop = 0; ipop < populasi; ipop++) {
            
         for (int iisi = 0; iisi < panjangPartikel; iisi++) {
            
            totalIsi[0]+=ambilKalo((int) partikel[ipop][iisi], iisi);   
            totalIsi[1]+=ambilKarb((int) partikel[ipop][iisi], iisi);   
            totalIsi[2]+=ambilProt((int) partikel[ipop][iisi], iisi);   
            totalIsi[3]+=ambilLema((int) partikel[ipop][iisi], iisi);   
            totalIsi[4]+=ambilHarg((int) partikel[ipop][iisi], iisi);   
          
      //hitung selisih dan fitness       
       //update pBest dan gBest     
  
         }
            selisihKal=10*abs(kebutuhanKalo-totalIsi[0]);
            selisihKar=10*abs(kebutuhanKarb-totalIsi[1]);
            selisihPro=20*abs(kebutuhanProt-totalIsi[2]);
            selisihLem=70*abs(kebutuhanLema-totalIsi[3]);
            penaltiP= (selisihKal+selisihKar+selisihPro+selisihLem);
            fitnessP= 10000/(penaltiP+(totalIsi[4]*0.5));
       //     System.out.println(fitnessP);
            //Ambil pBest ^^
            if (pBest<fitnessP) {
                pBest=fitnessP;
                //System.out.print("||"+pBest+"||");
                for (int i = 0; i < panjangPartikel; i++) {
                        arrPartPBest[i]=Math.round(partikel[ipop][i]);
                }
                
            }
            //Reset nilai metode hitung fitnes per partikel karena ganti partikel
            fitnessP=0; penaltiP=0; selisihKal=0;selisihKar=0;selisihPro=0;
            selisihLem=0;
            for (int i = 0; i < 5; i++) {
                totalIsi[i]=0;
            }
            //Ambil gBest
            if (gBest<pBest) {
                    gBest=pBest;
                    for (int i = 0; i < panjangPartikel; i++) {
                        arrPartGBest[i]=arrPartPBest[i];
//                        System.out.print(gBest+" ");
//                        System.out.println(pBest);
                }
                   
            }
            
        }
        //nampilin array pbest dan gbest
             System.out.println("");
            System.out.print("Indeks pBest= ");
             for (int i = 0; i < panjangPartikel; i++) {
                    System.out.print("||"+arrPartPBest[i]);
                }
            System.out.println("");
            System.out.print("Indeks gBest= ");
             for (int i = 0; i < panjangPartikel; i++) {
            System.out.print("||"+arrPartGBest[i]);
    }
        System.out.println("||Gbest= "+gBest+"||Pbest= "+pBest);
        System.out.println("Iterasi ke="+iter);
      //  StringBuilder sb= new StringBuilder(128);
  //tampilkan di tabel hasil iterasi      
        if ((iter!=0)) {
        taHasilIterasi.append("Iterasi ke="+iter);
        taHasilIterasi.append("    |Gbest= "+gBest+"|    Pbest= "+pBest+"| \n");
        
    }
        
 //       System.out.println("pengujian ke="+(pengujian+1));
                
         //hitung update velocity
                for (int i = 0; i < populasi; i++) {
                for (int j = 0; j < panjangPartikel; j++) {
                    try {
                    ra1= Math.random();
                    ra2=Math.random();
                 
                        
velocityT1[i][j]=velocityT[i][j]+(c1*ra1*(arrPartPBest[j]-partikel[i][j]))+(c2*ra2*(arrPartGBest[j]-partikel[i][j]));
              //  System.out.print("||"+velocityT1[i][j]+" > "+i+" > "+j+" "+iter);
                    } catch (Exception e) {
                        System.out.println(e);
                    }
    
                    
                
                }//System.out.println("");
            }
        
            
            //update posisi+round index cek agar tidak kurang atau lebih dari index   
            for (int i = 0; i < populasi; i++) {
                for (int j = 0; j < panjangPartikel; j++) {
             partikel[i][j]=Math.round(partikel[i][j]+velocityT1[i][j]);
            
             //kalau kurang dari 0 maka di absolute, dan kalau lebi maka dari 0
if (partikel[i][j]<0) {partikel[i][j]=Math.abs(partikel[i][j]);}
if (partikel[i][j]>24){partikel[i][j]=partikel[i][j] % 24;}

      //    partikel[i][j]=Math.round(partikel[i][j]);
                   
        }}       
            //nampilin partikel
             for (int i = 0; i < populasi; i++) {
            for (int j = 0; j < panjangPartikel; j++) {
                velocityT[i][j]=velocityT1[i][j];
             //   System.out.print(partikel[i][j]+"||");
            }//System.out.println("");
               
    }       
             

//}
tfOutputKalori.setText(String.valueOf(kebutuhanKalo));  
tfOutputKarbohidrat.setText(String.valueOf(kebutuhanKarb));
tfOutputProtein.setText(String.valueOf(kebutuhanProt));
tfOutputLemak.setText(String.valueOf(kebutuhanLema));
double hasKal = 0,hasKar = 0,hasPro = 0,hasLem = 0, hasHar=0;
String hasNam="|";
                  
for (int i = 0; i < panjangPartikel; i++) {
            //tampilHasil((int) arrPartGBest[i],i);
            hasKal+=ambilKalo((int) arrPartGBest[i],i);   
            hasKar+=ambilKarb((int) arrPartGBest[i],i);   
            hasPro+=ambilProt((int) arrPartGBest[i],i);   
            hasLem+=ambilLema((int) arrPartGBest[i],i);   
            hasHar+=ambilHarg((int) arrPartGBest[i],i);
            hasNam+=ambilNama((int) arrPartGBest[i], i);
            if (i<(panjangPartikel-1)) {
                hasNam+=", ";
    } else {hasNam+=". \n ";
            }
            
        }
        double []selisihAkhir=new double[4];
        selisihAkhir[0]=((abs(kebutuhanKalo-hasKal))/kebutuhanKalo)*100;
        selisihAkhir[1]=((abs(kebutuhanKarb-hasKar))/kebutuhanKarb)*100;
        selisihAkhir[2]=((abs(kebutuhanProt-hasPro))/kebutuhanProt)*100;
        selisihAkhir[3]=((abs(kebutuhanLema-hasLem))/kebutuhanLema)*100;
        for (int i = 0; i < selisihAkhir.length; i++) {
        System.out.println(selisihAkhir[i]);
        }
        System.out.println(hasNam);
tfSelPerKal.setText(String.valueOf(selisihAkhir[0]));
tfSelPerKar.setText(String.valueOf(selisihAkhir[1]));
tfSelPerPro.setText(String.valueOf(selisihAkhir[2]));
tfSelPerLem.setText(String.valueOf(selisihAkhir[3]));
               
tfKalRekom.setText(String.valueOf(hasKal));  
tfKarRekom.setText(String.valueOf(hasKar));
tfProRekom.setText(String.valueOf(hasPro));
tfLemRekom.setText(String.valueOf(hasLem)); 
        System.out.println(hasHar);
        if (iter==(iterasi-1)) {
        taDetail.append("Total Kandungan Gizi Menu Makanan dan Selisihnya adalah: \n");
        taDetail.append("1.Kalori: "+hasKal+" Selisih "+selisihAkhir[0]+"% \n" );
        taDetail.append("2.Karbohidrat: "+hasKar+" Selisih "+selisihAkhir[1]+"% \n" );
        taDetail.append("3.Protein: "+hasPro+" Selisih "+selisihAkhir[2]+"% \n" );
        taDetail.append("4.Lemak: "+hasLem+" Selisih "+selisihAkhir[3]+"% \n" );
        taDetail.append("Dengan total harga: "+hasHar+"\n" );
        taDetail.append("Makanannya adalah: \n"+hasNam);
    }
       } 

// end case pengujian
//}

    }                                         
  
    private void tfC2ActionPerformed(java.awt.event.ActionEvent evt) {                                     
        // TODO add your handling code here:
    }                                    

    private void textfieldBBActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
    }                                           

    private void tombolTPokokActionPerformed(java.awt.event.ActionEvent evt) {                                             
        // TODO add your handling code here:
        
        try {
            String query = "select * from makanan_pokok";
            connection=(Connection) koneksi();
            PreparedStatement pst = connection.prepareStatement(query);
            ResultSet rs = pst.executeQuery();
            tabMK.setModel(DbUtils.resultSetToTableModel(rs));
        }
        catch (Exception e) {
           
            e.printStackTrace();
            System.out.println(e);
            JOptionPane.showMessageDialog(null, "gagal mengkoneksikan" +e);
        }
    }                                            

    private void tombolTNabatiActionPerformed(java.awt.event.ActionEvent evt) {                                              
        // TODO add your handling code here:
        try {
            String query = "select * from sumber_nabati";
            connection=(Connection) koneksi();
            PreparedStatement pst = connection.prepareStatement(query);
            ResultSet rs = pst.executeQuery();
            tabMK.setModel(DbUtils.resultSetToTableModel(rs));
        }
        catch (Exception e) {
           
            e.printStackTrace();
            System.out.println(e);
            JOptionPane.showMessageDialog(null, "gagal mengkoneksikan" +e);
        }
    }                                             

    private void tombolTHewaniActionPerformed(java.awt.event.ActionEvent evt) {                                              
        // TODO add your handling code here:
        try {
            String query = "select * from sumber_hewani";
            connection=(Connection) koneksi();
            PreparedStatement pst = connection.prepareStatement(query);
            ResultSet rs = pst.executeQuery();
            tabMK.setModel(DbUtils.resultSetToTableModel(rs));
        }
        catch (Exception e) {
           
            e.printStackTrace();
            System.out.println(e);
            JOptionPane.showMessageDialog(null, "gagal mengkoneksikan" +e);
        }
    }                                             

    private void tombolTSayuranActionPerformed(java.awt.event.ActionEvent evt) {                                               
        // TODO add your handling code here:
        try {
            String query = "select * from sayuran";
            connection=(Connection) koneksi();
            PreparedStatement pst = connection.prepareStatement(query);
            ResultSet rs = pst.executeQuery();
            tabMK.setModel(DbUtils.resultSetToTableModel(rs));
        }
        catch (Exception e) {
           
            e.printStackTrace();
            System.out.println(e);
            JOptionPane.showMessageDialog(null, "gagal mengkoneksikan" +e);
        }
    }                                              

    private void tombolTPelengkapActionPerformed(java.awt.event.ActionEvent evt) {                                                 
        // TODO add your handling code here:
        try {
            String query = "select * from pelengkap";
            connection=(Connection) koneksi();
            PreparedStatement pst = connection.prepareStatement(query);
            ResultSet rs = pst.executeQuery();
            tabMK.setModel(DbUtils.resultSetToTableModel(rs));
        }
        catch (Exception e) {
           
            e.printStackTrace();
            System.out.println(e);
            JOptionPane.showMessageDialog(null, "gagal mengkoneksikan" +e);
        }
    }                                                

    private void tfProRekomActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
    }                                          

    private void tfOutputLemakActionPerformed(java.awt.event.ActionEvent evt) {                                              
        // TODO add your handling code here:
    }                                             

    private void tfOutputProteinActionPerformed(java.awt.event.ActionEvent evt) {                                                
        // TODO add your handling code here:
    }                                               

    private void tfOutputKaloriActionPerformed(java.awt.event.ActionEvent evt) {                                               
        // TODO add your handling code here:
    }                                              

    private void tfSelPerKarActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
    }                                           

    private void tfSelPerProActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
    }                                           

    private void tfSelPerLemActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
    }                                           

   
    /**
     * @param args the command line arguments
     */
    
    public void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI_PSO.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI_PSO.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI_PSO.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI_PSO.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        
        java.awt.EventQueue.invokeLater(new Runnable() {
         
            public void run() {
                new GUI_PSO().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JComboBox boxGender;
    private javax.swing.JComboBox boxLevel;
    private javax.swing.ButtonGroup grup_umur;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton kalkulasi;
    private javax.swing.JRadioButton kategori1;
    private javax.swing.JRadioButton kategori2;
    private javax.swing.JRadioButton kategori3;
    private javax.swing.JTextArea taDetail;
    private javax.swing.JTextArea taHasilIterasi;
    private javax.swing.JTable tabMK;
    private javax.swing.JTextField textfieldBB;
    private javax.swing.JTextField tfC1;
    private javax.swing.JTextField tfC2;
    private javax.swing.JTextField tfIterasi;
    private javax.swing.JTextField tfKalRekom;
    private javax.swing.JTextField tfKarRekom;
    private javax.swing.JTextField tfLemRekom;
    private javax.swing.JTextField tfOutputKalori;
    private javax.swing.JTextField tfOutputKarbohidrat;
    private javax.swing.JTextField tfOutputLemak;
    private javax.swing.JTextField tfOutputProtein;
    private javax.swing.JTextField tfPopulasi;
    private javax.swing.JTextField tfProRekom;
    private javax.swing.JTextField tfSelPerKal;
    private javax.swing.JTextField tfSelPerKar;
    private javax.swing.JTextField tfSelPerLem;
    private javax.swing.JTextField tfSelPerPro;
    private javax.swing.JButton tombolTHewani;
    private javax.swing.JButton tombolTNabati;
    private javax.swing.JButton tombolTPelengkap;
    private javax.swing.JButton tombolTPokok;
    private javax.swing.JButton tombolTSayuran;
    // End of variables declaration                   
}

